{"version":3,"sources":["assets/img/technologies/spinner.gif","pages/graphics/password.svg","assets/img/team/profile-picture-3.jpg","assets/img/mockup-presentation2.png","assets/img/technologies/social.png","assets/img/pages/overview.png","assets/img/pages/history.png","assets/img/pages/settings.png","assets/img/pages/sign-in.png","assets/img/pages/sign-up.png","assets/img/pages/detection.png","assets/img/pages/forgot-password.png","assets/img/pages/reset-password.png","assets/img/pages/404.png","assets/img/pages/500.png","assets/img/profile-cover.jpg","assets/img/illustrations/upper.png","assets/img/illustrations/lower.png","assets/img/illustrations/404.svg","assets/img/illustrations/500.svg","assets/img/technologies/disk.svg","assets/img/aboutUsI.jpg","assets/img/aboutUsA.jpg","reducers/auth.js","reducers/index.js","actions/type.js","store.js","routes.js","actions/auth.js","data/pages.js","components/AnimatedIcon.js","pages/Presentation.js","components/Charts.js","components/Widgets.js","pages/dashboard/DashboardOverview.js","pages/components/Detection.js","components/PaginationTable.js","components/TableFooter.js","components/HistoryTable.js","pages/History.js","components/Forms.js","components/ChoosePhotoWidget.js","pages/Setting.js","pages/tables/Trends.js","pages/tables/TrendsTables.js","pages/examples/Signin.js","pages/examples/Signup.js","pages/examples/ForgotPassword.js","pages/examples/VerifyAccount.js","pages/examples/ResetPassword.js","pages/examples/ChangePassword.js","pages/examples/NotFound.js","pages/examples/ServerError.js","components/Sidebar.js","components/Navbarc.js","components/Preloader.js","hocs/Layout.js","pages/examples/AboutUs.js","pages/HomePage.js","components/ScrollToTop.js","index.js","assets/img/technologies/react-hero-logo.svg","assets/img/illustrations/signin.svg"],"names":["module","exports","initalState","access","localStorage","getItem","refresh","isAuthenticated","forgot","pagestate","user","trends","result","password","post","profile","persistConfig","key","storage","whitelist","rootReducer","combineReducers","auth","state","action","type","payload","setItem","removeItem","persistReducer","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","Routes","path","load_user","dispatch","a","config","headers","Authorization","Accept","axios","get","process","REACT_APP_API_URL","res","data","logout","get_trends","get_post","update","id","username","first_name","last_name","body","JSON","stringify","get_profile","name","image","OverviewImg","link","HistoryImg","SettingsImg","SignInImg","SignUpImg","DetImg","ForgotPasswordImg","ResetPasswordImg","NotFoundImg","ServerErrorImg","AnimatedIcon","animation","twitter","size","wrapperStyle","padding","strokeColor","connect","PagePreview","props","Col","xs","className","Card","Link","as","to","Image","src","alt","icon","faExternalLinkAlt","Navbar","variant","expand","bg","style","backgroundImage","SocialBg","Container","Brand","HashLink","Toggle","aria-controls","ReactHero","Collapse","Nav","fontFamily","fontWeight","Button","color","Row","xl","fontSize","xmlns","viewBox","d","MockupPresentation","md","faTwitter","faChartLine","faEye","pages","map","page","data-loading-text","target","href","faFacebook","faInstagram","height","SalesValueChart","plugins","ChartistTooltip","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","ProfileCardWidget","photo","border","ProfileCover","Body","Img","Title","Subtitle","Text","SalesValueWidget","title","percentage","percentageIcon","faAngleDown","faAngleUp","percentageColor","Header","SalesValueWidgetPhone","DetectionWidget","iconColor","category","period","backgroundColor","class","nrOfLevels","arcsLength","colors","percent","useEffect","length","latest","console","log","per","text_result","bot","name_result","outcome","parseFloat","toFixed","categoryFake","faPlus","ButtonGroup","sm","detection","text","Username","useState","requestSent","setrequestSent","setState","setdata","onchangeEvent","event","preValue","onsubmit","preventDefault","DetectBG1","DetectBG2","Form","onSubmit","Group","Label","InputGroup","faFont","Control","autoFocus","placeholder","onChange","faUser","required","disabled","spinner","PageVisitsTable","rowsPerPage","tableRange","setTableRange","slice","setSlice","range","num","Math","ceil","i","push","calculateRange","sliceData","TableFooter","setPage","el","index","onClick","destroy","count","total","mystyle","textOverflow","width","whiteSpace","overflow","Table","hover","Dropdown","split","faEllipsisH","Menu","Item","faTrashAlt","Footer","passwordChange","current_password","new_password","re_new_password","cpassword","setcpassword","uname","fdata","setfdata","cdata","setcdata","changePassword","cinputEvent","inputEvent","email","va","Upload_profile","fd","FormData","append","profile_image","imageName","user_id","imageSubmit","fluid","rounded","faPaperclip","accept","files","photo1","setphoto1","TableRow","tweet_volume","scope","responsive","pt","add","eCheck","seteCheck","useHistory","setmodal","faAngleLeft","BgImage","faEnvelope","faUnlockAlt","Check","display","signup","re_password","fpassword","accountCreated","setaccountCreated","alert","FormCheck","Input","htmlFor","reset_password","validation","setvalidation","Success","setSuccess","setaction","verify","uid","token","match","verified","setVeried","params","reset_password_confirm","ChangePassword","NotFoundImage","faChevronLeft","lg","ErrorImage","location","useLocation","pathname","show","setShow","showClass","onCollapse","NavItem","external","badgeText","badgeBg","badgeColor","classNames","navItemClassName","linkProps","Badge","pill","collapseOnSelect","CSSTransition","timeout","in","ProfilePicture","faSignOutAlt","faTimes","faHome","faChartPie","faHistory","faCog","faTable","Divider","expanded","faUserCircle","ReactLogo","checkAuthenticated","code","children","AboutUs","Asad","Irtaza","RouteWithLoader","Component","component","rest","loaded","setLoaded","timer","setTimeout","clearTimeout","render","Preloader","RouteWithSidebar","Sidebar","exact","Presentation","Signin","Signup","ForgotPassword","VerifyAccount","ResetPassword","NotFoundPage","ServerError","DashboardOverview","History","Setting","TrendsTables","Detection","window","scrollTo","top","left","behavior","ReactDOM","ScrollToTop","HomePage","document","getElementById"],"mappings":"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","file":"static/js/main.37b0d4c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ff8a5270.gif\";","module.exports = __webpack_public_path__ + \"static/media/password.6ce89693.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile-picture-3.1b1ea04d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mockup-presentation2.81b5be17.png\";","module.exports = __webpack_public_path__ + \"static/media/social.5eae0af4.png\";","module.exports = __webpack_public_path__ + \"static/media/overview.919c3ccd.png\";","module.exports = __webpack_public_path__ + \"static/media/history.efde6a3a.png\";","module.exports = __webpack_public_path__ + \"static/media/settings.098418fd.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-in.245bf353.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up.6933749a.png\";","module.exports = __webpack_public_path__ + \"static/media/detection.0b66e310.png\";","module.exports = __webpack_public_path__ + \"static/media/forgot-password.284683c4.png\";","module.exports = __webpack_public_path__ + \"static/media/reset-password.1e47f494.png\";","module.exports = __webpack_public_path__ + \"static/media/404.54d6ffb4.png\";","module.exports = __webpack_public_path__ + \"static/media/500.a4f6d149.png\";","module.exports = __webpack_public_path__ + \"static/media/profile-cover.9992e0ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/upper.5b2135df.png\";","module.exports = __webpack_public_path__ + \"static/media/lower.9ffb5236.png\";","module.exports = __webpack_public_path__ + \"static/media/404.a925745b.svg\";","module.exports = __webpack_public_path__ + \"static/media/500.a621f335.svg\";","module.exports = __webpack_public_path__ + \"static/media/disk.0f28e503.svg\";","module.exports = __webpack_public_path__ + \"static/media/aboutUsI.75b5b6c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aboutUsA.ee4444ec.jpg\";","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAIL,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_COMFIRM_FAIL,\r\n  LOGOUT,\r\n  SIGNUP_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  TRENDS_LOADED_SUCCESS,\r\n  TRENDS_LOADED_FAIL,\r\n  UP,\r\n  DOWN,\r\n  POST_FAIL,\r\n  POST_SUCCESS,\r\n  UPDATE_FAIL,\r\n  UPDATE_SUCCESS,\r\n  DELETE_SUCCESS,\r\n  DELETE_FAIL,\r\n  PASSWORD_FAIL,\r\n  PASSWORD_SUCCESS,\r\n  PROFILE_SUCCESS,\r\n  PROFILE_FAIL,\r\n} from \"../actions/type\";\r\n\r\nconst initalState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  forgot:null,\r\n  pagestate: false,\r\n  user: [],\r\n  trends: [],\r\n  result: [],\r\n  password:false,\r\n  post: [],\r\n  profile:[],\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"refresh\", payload.refresh);\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n\r\n    case AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case USER_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case TRENDS_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        trends: payload,\r\n      };\r\n\r\n    case TRENDS_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        trends: null,\r\n      };\r\n    case USER_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      };\r\n\r\n    case POST_FAIL:\r\n      return {\r\n        ...state,\r\n        post: null,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case SIGNUP_FAIL:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        access: null,\r\n        refresh: null,\r\n        user: null,\r\n      };\r\n\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case PASSWORD_RESET_COMFIRM_FAIL:\r\n    case PASSWORD_RESET_FAIL:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        forgot:true,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    case DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      };\r\n    case PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        password:true\r\n      }\r\n    case PASSWORD_FAIL:\r\n        return {\r\n          ...state,\r\n          password:false\r\n        };\r\n    \r\n    case DELETE_FAIL:\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        profile:\"\"\r\n      };\r\n    case PROFILE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          profile:payload\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\nimport auth from \"./auth\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['auth']\r\n}\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","export const LOGIN_SUCCESS='LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL='LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS='SIGNUP_SUCCESS';\r\nexport const ACTIVATION_FAIL='ACTIVATION_FAIL';\r\nexport const ACTIVATION_SUCCESS='ACTIVATION_SUCCESS';\r\nexport const SIGNUP_FAIL='SIGNUP_FAIL';\r\nexport const USER_LOADED_SUCCESS='LOGIN_USER_SUCCESS';\r\nexport const DETECTION_LOADED_SUCCESS='DETECTION_USER_SUCCESS';\r\nexport const DETECTION_LOADED_FAIL='DETECTION_USER_FAIL';\r\nexport const TRENDS_LOADED_SUCCESS='TRENDS_USER_SUCCESS';\r\nexport const TRENDS_LOADED_FAIL='TRENDS_USER_FAIL';\r\nexport const USER_LOADED_FAIL='LOGIN_USER_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS='PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL='PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS='PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const PASSWORD_RESET_COMFIRM_FAIL='PASSWORD_RESET_COMFIRM_FAIL';\r\nexport const AUTHENTICATED_SUCCESS='AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL='AUTHENTICATED_FAIL';\r\nexport const LOGOUT='LOGOUT';\r\nexport const UP='UP';\r\nexport const DOWN='DOWN';\r\nexport const POST_FAIL='POST_FAIL';\r\nexport const POST_SUCCESS='POST_SUCCESS';\r\nexport const UPDATE_FAIL='UPDATE_FAIL,';\r\nexport const UPDATE_SUCCESS='UPDATE_SUCCESS';\r\nexport const DELETE_SUCCESS='DELETE_SUCCESS';\r\nexport const DELETE_FAIL='DELETE_FAIL,';\r\nexport const PASSWORD_SUCCESS='PASSWORD_SUCCESS';\r\nexport const PASSWORD_FAIL='PASSWORD_FAIL,';\r\nexport const UPLOAD_SUCCESS = 'UPLOAD_SUCCESS';\r\nexport const UPLOAD_FAIL = 'UPLOAD_FAIL';\r\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\r\nexport const PROFILE_FAIL = \"PROFILE_FAIL\";\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\nexport const store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","export const Routes = {\r\n  // pages\r\n  Presentation: { path: \"/\" },\r\n  DashboardOverview: { path: \"/dashboard/overview\" },\r\n  Detection: { path: \"/page\" },\r\n  History: { path: \"/History\" },\r\n  Settings: { path: \"/setting\" },\r\n  TrendsTables: { path: \"/tables/TrendsTables\" },\r\n  Billing: { path: \"/examples/billing\" },\r\n  Invoice: { path: \"/examples/invoice\" },\r\n  Signin: { path: \"/examples/sign-in\" },\r\n  Signup: { path: \"/examples/sign-up\" },\r\n  AboutUs: { path: \"/examples/AboutUs\" },\r\n  ForgotPassword: { path: \"/examples/forgot-password\" },\r\n  VerifyAccount: { path: \"/activate/:uid/:token/\" },\r\n  ChangePassword: { path: \"/examples/change-password\" },\r\n  ResetPassword: { path: \"/password/reset/confirm/:uid/:token/\" },\r\n  NotFound: { path: \"/examples/404\" },\r\n  ServerError: { path: \"/examples/500\" },\r\n\r\n  // docs\r\n  DocsOverview: { path: \"/documentation/overview\" },\r\n  DocsDownload: { path: \"/documentation/download\" },\r\n  DocsQuickStart: { path: \"/documentation/quick-start\" },\r\n  DocsLicense: { path: \"/documentation/license\" },\r\n  DocsFolderStructure: { path: \"/documentation/folder-structure\" },\r\n  DocsBuild: { path: \"/documentation/build-tools\" },\r\n  DocsChangelog: { path: \"/documentation/changelog\" },\r\n};\r\n","import { PaletteOutlined } from \"@material-ui/icons\";\r\nimport { contextType } from \"react-modal\";\r\nimport axios from \"axios\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  USER_LOADED_SUCCESS,\r\n  USER_LOADED_FAIL,\r\n  AUTHENTICATED_FAIL,\r\n  AUTHENTICATED_SUCCESS,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_COMFIRM_FAIL,\r\n  SIGNUP_SUCCESS,\r\n  ACTIVATION_FAIL,\r\n  ACTIVATION_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  TRENDS_LOADED_FAIL,\r\n  TRENDS_LOADED_SUCCESS,\r\n  DOWN,\r\n  UP,\r\n  DETECTION_LOADED_FAIL,\r\n  DETECTION_LOADED_SUCCESS,\r\n  POST_SUCCESS,\r\n  POST_FAIL,\r\n  UPDATE_FAIL,\r\n  UPDATE_SUCCESS,\r\n  DELETE_FAIL,\r\n  DELETE_SUCCESS,\r\n  PASSWORD_SUCCESS,\r\n  PASSWORD_FAIL,\r\n  PROFILE_FAIL,\r\n  PROFILE_SUCCESS,\r\n} from \"./type\";\r\n\r\nexport const Upload_profile = (name, id) => async (dispatch) => {\r\n  const fd = new FormData();\r\n  fd.append(\"name\", name.profile_image);\r\n  fd.append(\"id\", id);\r\n\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n      },\r\n    };\r\n    const body = JSON.stringify({ id, name });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}postprofile`,\r\n        fd,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PROFILE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: PROFILE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkAuthenticated = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}auth/jwt/verify/`,\r\n        body,\r\n        config\r\n      );\r\n      if (res.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAIL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const load_user = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}auth/users/me/`,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: USER_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: USER_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const add = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}auth/jwt/create/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(load_user());\r\n    dispatch(get_trends());\r\n    dispatch(get_post());\r\n    dispatch(get_profile());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email });\r\n\r\n  try {\r\n    await axios.post(\r\n      `${process.env.REACT_APP_API_URL}auth/users/reset_password/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const verify = (uid, token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}auth/users/activation/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ACTIVATION_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAIL,\r\n    });\r\n  }\r\n};\r\n//\r\n\r\nexport const reset_password_confirm =\r\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n    try {\r\n      await axios.post(\r\n        `${process.env.REACT_APP_API_URL}auth/users/reset_password_confirm/`,\r\n        body,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_RESET_COMFIRM_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\nexport const logpage = (page) => (dispatch) => {\r\n  if (page === true) {\r\n    dispatch({ type: UP });\r\n  } else {\r\n    dispatch({ type: DOWN });\r\n  }\r\n};\r\n\r\nexport const signup =\r\n  (username, first_name, last_name, email, password, re_password, fpassword) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n      username,\r\n      last_name,\r\n      first_name,\r\n      email,\r\n      password,\r\n      re_password,\r\n      fpassword,\r\n    });\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}auth/users/`,\r\n        body,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: SIGNUP_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SIGNUP_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const get_trends = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}list`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: TRENDS_LOADED_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TRENDS_LOADED_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: TRENDS_LOADED_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//////////////////////////////////////////////////\r\nexport const detection = (text, name, Username) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ text, Username, name });\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}news/`,\r\n      body,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: POST_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const get_post = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}news/`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: POST_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: POST_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: POST_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const update =\r\n  (id, username, first_name, last_name) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ username, first_name, last_name });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}auth/user/${id}`,\r\n        body,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: UPDATE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      dispatch(load_user());\r\n      dispatch(get_trends());\r\n      dispatch(get_post());\r\n    } catch (err) {\r\n      dispatch({\r\n        type: UPDATE_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const destroy = (id) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}news/${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: DELETE_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const passwordChange =\r\n  (current_password, new_password, re_new_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({\r\n      current_password,\r\n      new_password,\r\n      re_new_password,\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_URL}auth/users/set_password/`,\r\n        body,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: PASSWORD_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_FAIL,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const get_profile = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}profile`,\r\n        config\r\n      );\r\n      dispatch({\r\n        type: PROFILE_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_FAIL,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: PROFILE_FAIL,\r\n    });\r\n  }\r\n};\r\n","import OverviewImg from \"../assets/img/pages/overview.png\";\r\nimport HistoryImg from \"../assets/img/pages/history.png\";\r\nimport SettingsImg from \"../assets/img/pages/settings.png\";\r\nimport SignInImg from \"../assets/img/pages/sign-in.png\";\r\nimport SignUpImg from \"../assets/img/pages/sign-up.png\";\r\nimport DetImg from \"../assets/img/pages/detection.png\";\r\nimport ForgotPasswordImg from \"../assets/img/pages/forgot-password.png\";\r\nimport ResetPasswordImg from \"../assets/img/pages/reset-password.png\";\r\nimport NotFoundImg from \"../assets/img/pages/404.png\";\r\nimport ServerErrorImg from \"../assets/img/pages/500.png\";\r\n\r\nimport { Routes } from \"../routes\";\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    name: \"Overview\",\r\n    image: OverviewImg,\r\n    link: Routes.DashboardOverview.path,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: \"History\",\r\n    image: HistoryImg,\r\n    link: Routes.History.path,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Settings\",\r\n    image: SettingsImg,\r\n    link: Routes.Settings.path,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Sign In\",\r\n    image: SignInImg,\r\n    link: Routes.Signin.path,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Sign Up\",\r\n    image: SignUpImg,\r\n    link: Routes.Signup.path,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Detect\",\r\n    image: DetImg,\r\n    link: Routes.Detection.path,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Forgot password\",\r\n    image: ForgotPasswordImg,\r\n    link: Routes.ForgotPassword.path,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Reset password\",\r\n    image: ResetPasswordImg,\r\n    link: Routes.ResetPassword.path,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"404\",\r\n    image: NotFoundImg,\r\n    link: Routes.NotFound.path,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"500\",\r\n    image: ServerErrorImg,\r\n    link: Routes.ServerError.path,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport UseAnimations from 'react-useanimations';\r\nimport twitter from 'react-useanimations/lib/twitter'\r\nconst AnimatedIcon = () => <UseAnimations animation={twitter} size={900} wrapperStyle={{ padding: 100 }} strokeColor=\"#f2c46d\"/>;\r\n\r\nexport default AnimatedIcon;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBook,\r\n  faExternalLinkAlt,\r\n  faTimesCircle,\r\n  faCheckCircle,\r\n  faCalendarAlt,\r\n  faChartLine,\r\n  faEye,\r\n  faCodeBranch,\r\n  faShoppingCart,\r\n  faFolder,\r\n  faMapMarkedAlt,\r\n  faPager,\r\n  faFileCode,\r\n  faDownload,\r\n  faHashtag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faBootstrap,\r\n  faGithub,\r\n  faJs,\r\n  faReact,\r\n  faSass,\r\n  faTwitter,\r\n  faFacebook,\r\n  faInstagram,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Card,\r\n  Image,\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { Routes } from \"../routes\";\r\nimport MockupPresentation from \"../assets/img/mockup-presentation2.png\";\r\nimport ReactHero from \"../assets/img/technologies/react-hero-logo.svg\";\r\nimport SocialBg from \"../assets/img/technologies/social.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\nimport pages from \"../data/pages\";\r\nimport AnimatedIcon from \"../components/AnimatedIcon\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nconst Presentation = ({ logout, isAuthenticated }) => {\r\n  const PagePreview = (props) => {\r\n    const { name, image, link } = props;\r\n    return (\r\n      <Col xs={6} className=\"mb-5\">\r\n        <Card.Link\r\n          as={Link}\r\n          to={link}\r\n          className=\"page-preview page-preview-lg scale-up-hover-2\"\r\n        >\r\n          <Image\r\n            src={image}\r\n            className=\"shadow-lg rounded scale\"\r\n            alt=\"Dashboard page preview\"\r\n          />\r\n\r\n          <div className=\"text-center show-on-hover\">\r\n            <h6 className=\"m-0 text-center text-white\">\r\n              {name}{\" \"}\r\n              <FontAwesomeIcon icon={faExternalLinkAlt} className=\"ms-2\" />\r\n            </h6>\r\n          </div>\r\n        </Card.Link>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        bg=\"primary\"\r\n        className=\"navbar-transparent navbar-theme-primary sticky-top\"\r\n        style={{ backgroundImage: `url(${SocialBg})` }}\r\n      >\r\n        <Container className=\"position-relative justify-content-between px-3\">\r\n          <Navbar.Brand\r\n            as={HashLink}\r\n            to=\"#home\"\r\n            className=\"me-lg-3 d-flex align-items-center\"\r\n          >\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-dropdown\" />\r\n            <Image src={ReactHero} />\r\n            <span className=\"ms-2 brand-text d-none d-md-inline text-quaternary\"></span>\r\n          </Navbar.Brand>\r\n\r\n          <div className=\"d-flex align-items-center\">\r\n            <Navbar.Collapse id=\"navbar-default-primary\">\r\n              <Nav className=\"navbar-nav-hover align-items-lg-center\">\r\n                {isAuthenticated ? (\r\n                  <>\r\n                    <Nav.Link\r\n                      as={HashLink}\r\n                      to={Routes.Detection.path}\r\n                      style={{\r\n                        fontFamily:\r\n                          \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                        fontWeight: \"Bold\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      Detect\r\n                    </Nav.Link>\r\n                    <Nav.Link\r\n                      as={HashLink}\r\n                      to={Routes.Settings.path}\r\n                      style={{\r\n                        fontFamily:\r\n                          \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                        fontWeight: \"Bold\",\r\n                      }}\r\n                    >\r\n                      Profile\r\n                    </Nav.Link>\r\n                    {/* <Nav.Link as={HashLink} to=\"#folder\" className=\"d-sm-none d-xl-inline\" style={{fontFamily:\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\"}}>Contact</Nav.Link> */}\r\n                    {/* <Nav.Link as={HashLink} to=\"#getting-started\" style={{fontFamily:\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\"}}>Getting Started</Nav.Link> */}\r\n                    <Nav.Link\r\n                      as={HashLink}\r\n                      to={Routes.AboutUs.path}\r\n                      style={{\r\n                        fontFamily:\r\n                          \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                        fontWeight: \"Bold\",\r\n                      }}\r\n                    >\r\n                      About\r\n                    </Nav.Link>\r\n                    <Button\r\n                      variant=\"quaternary\"\r\n                      variant=\"tertiary\"\r\n                      as={Link}\r\n                      onClick={() => logout()}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      {\" \"}\r\n                      &nbsp;&nbsp;&nbsp;Log Out&nbsp;&nbsp;&nbsp;{\" \"}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"quaternary\"\r\n                    variant=\"tertiary\"\r\n                    as={Link}\r\n                    to={Routes.Signin.path}\r\n                    style={{ color: \"white\" }}\r\n                  >\r\n                    &nbsp;&nbsp;&nbsp;Sign-in&nbsp;&nbsp;&nbsp;\r\n                  </Button>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </div>\r\n        </Container>\r\n      </Navbar>\r\n      <section\r\n        className=\"section-header overflow-hidden pt-5 pt-lg-6 pb-9 pb-lg-12 bg-primary text-white\"\r\n        id=\"home\"\r\n      >\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"text-center\">\r\n              <div className=\"react-big-icon d-none d-lg-block align-items-center text-center\"></div>\r\n              <h1></h1>\r\n              <h1\r\n                className=\"brand-text text-quaternary\"\r\n                style={{\r\n                  fontSize: \"4rem\",\r\n                  fontWeight: \"1000\",\r\n                  fontFamily:\r\n                    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                }}\r\n              >\r\n                FAKE NEWS DETECTOR 2\r\n              </h1>\r\n              <p\r\n                style={{\r\n                  fontFamily:\r\n                    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Fake News Detection Made Easy. Detect Fake information within a\r\n                few seconds using one-click detection\r\n              </p>\r\n              <div className=\"d-flex align-items-center justify-content-center\">\r\n                <Button\r\n                  variant=\"tertiary\"\r\n                  as={Link}\r\n                  to={Routes.DashboardOverview.path}\r\n                  className=\"text-white me-3\"\r\n                >\r\n                  Explore dashboard{\" \"}\r\n                </Button>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-center flex-column mb-6 mb-lg-5 mt-5\">\r\n                <div className=\"text-center\"></div>\r\n              </div>\r\n            </Col>\r\n            <Col xl={6} className=\"animated-icon text-center d-block d-xs-none\">\r\n              <AnimatedIcon></AnimatedIcon>\r\n            </Col>\r\n          </Row>\r\n          <figure className=\"position-absolute bottom-0 left-0 w-100 d-none d-md-block \">\r\n            <svg\r\n              className=\"fill-soft\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 3000 185.4\"\r\n            >\r\n              <path d=\"M3000,0v185.4H0V0c496.4,115.6,996.4,173.4,1500,173.4S2503.6,115.6,3000,0z\" />\r\n            </svg>\r\n          </figure>\r\n        </Container>\r\n      </section>\r\n      <div className=\"section pt-0\">\r\n        <Container className=\"mt-n10 mt-lg-n12 z-2\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col xs={12}>\r\n              <Image src={MockupPresentation} alt=\"Mockup presentation\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <div>\r\n            <Row className=\"justify-content-center mt-5 mt-lg-6\">\r\n              <Col xs={6} md={3} className=\"text-center mb-4\">\r\n                <div className=\"icon icon-shape icon-lg bg-white shadow-lg border-light rounded-circle mb-4\">\r\n                  <FontAwesomeIcon\r\n                    icon={faTwitter}\r\n                    className=\"text-secondary\"\r\n                  />\r\n                </div>\r\n                <Zoom>\r\n                  <h3 className=\"fw-bolder\">Tweets</h3>\r\n                  <p className=\"text-gray\">View Trends</p>\r\n                </Zoom>\r\n              </Col>\r\n              <Col xs={6} md={3} className=\"text-center mb-4\">\r\n                <div className=\"icon icon-shape icon-lg bg-white shadow-lg border-light rounded-circle mb-4\">\r\n                  <FontAwesomeIcon\r\n                    icon={faChartLine}\r\n                    className=\"text-secondary\"\r\n                  />\r\n                </div>\r\n                <Zoom>\r\n                  <h3 className=\"fw-bolder\">Visuals</h3>\r\n                  <p className=\"text-gray\">Explore Daashboard</p>\r\n                </Zoom>\r\n              </Col>\r\n\r\n              <Col xs={6} md={3} className=\"text-center\">\r\n                <div className=\"icon icon-shape icon-lg bg-white shadow-lg border-light rounded-circle mb-4\">\r\n                  <FontAwesomeIcon icon={faEye} className=\"text-secondary\" />\r\n                </div>\r\n                <Zoom>\r\n                  <h3 className=\"fw-bolder\">Detect</h3>\r\n                  <p className=\"text-gray\">One-Click Detection</p>\r\n                </Zoom>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <section className=\"section section-sm pt-0\" id=\"pages\">\r\n        <Container>\r\n          <Row className=\"justify-content-center mb-5 mb-lg-6\">\r\n            <Col xs={12} className=\"text-center\">\r\n              <h2 className=\"px-lg-5\">\r\n                Your One Destination to Detecting Fake News\r\n              </h2>\r\n              <p className=\"lead px-lg-10\">\r\n                Explore the Dashboard and much more\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Zoom>\r\n            <Row className=\"mb-5\">\r\n              {pages.map((page) => (\r\n                <PagePreview key={`page-${page.id == page}`} {...page} />\r\n              ))}\r\n            </Row>\r\n          </Zoom>\r\n        </Container>\r\n      </section>\r\n\r\n      <footer className=\"footer py-6 bg-dark text-white\">\r\n        <Container>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Navbar.Brand\r\n                as={HashLink}\r\n                to=\"#home\"\r\n                className=\"me-lg-3 mb-3 d-flex align-items-center\"\r\n              >\r\n                <Image src={ReactHero} />\r\n                <span className=\"ms-2 brand-text\">Fake News Detector</span>\r\n              </Navbar.Brand>\r\n              <p>\r\n                FND is a reimagined way to detect fake news from social media\r\n                postings. Additionaly, it provides you the ability to detect bot\r\n                accounts and provide you with great insights on the text you\r\n                provide\r\n              </p>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-quaternary text-dark shadow-soft btn-block\"\r\n                data-loading-text=\"Sending\"\r\n              >\r\n                <span style={{ color: \"#fff\" }}>One-Click Detection</span>\r\n              </button>\r\n              <div>\r\n                <p></p>\r\n              </div>\r\n            </Col>\r\n            <Col xs={6} md={2} className=\"mb-5 mb-lg-0\">\r\n              <p></p>\r\n              <span className=\"h5\">FND</span>\r\n              <ul className=\"links-vertical mt-2\">\r\n                <li>\r\n                  <Card.Link target=\"_blank\" href=\"\">\r\n                    Logout\r\n                  </Card.Link>\r\n                </li>\r\n                <li>\r\n                  <Card.Link target=\"_blank\" href=\"\">\r\n                    Profile\r\n                  </Card.Link>\r\n                </li>\r\n                <li>\r\n                  <Card.Link target=\"_blank\" href=\"\">\r\n                    About Us\r\n                  </Card.Link>\r\n                </li>\r\n                <li>\r\n                  <Card.Link target=\"_blank\" href=\"\">\r\n                    Contact Us\r\n                  </Card.Link>\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n            <Col xs={6} md={2} className=\"mb-5 mb-lg-0\">\r\n              <div>\r\n                <p></p>\r\n              </div>\r\n              <span className=\"h5\">Other</span>\r\n              <ul className=\"links-vertical mt-2\">\r\n                <li>\r\n                  <Card.Link as={Link} target=\"_blank\">\r\n                    Getting started\r\n                  </Card.Link>\r\n                </li>\r\n                <li>\r\n                  <Card.Link as={Link} target=\"_blank\">\r\n                    Changelog\r\n                  </Card.Link>\r\n                </li>\r\n                <li>\r\n                  <Card.Link target=\"_blank\" href=\"\">\r\n                    License\r\n                  </Card.Link>\r\n                </li>\r\n              </ul>\r\n            </Col>\r\n            <Col xs={12} md={4} className=\"mb-5 mb-lg-0\">\r\n              <span className=\"h5 mb-3 d-block\">Subscribe</span>\r\n              <form action=\"#\">\r\n                <div className=\"form-row mb-2\">\r\n                  <div className=\"col-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-quaternary text-dark shadow-soft btn-block\"\r\n                      data-loading-text=\"Sending\"\r\n                    >\r\n                      <span style={{ color: \"#fff\" }}>Login</span>\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    <p></p>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-quaternary text-dark shadow-soft btn-block\"\r\n                      data-loading-text=\"Sending\"\r\n                    >\r\n                      <span style={{ color: \"#fff\" }}>Register</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <p className=\"text-muted font-small m-0\">\r\n                We’ll never share your details. See our{\" \"}\r\n                <Card.Link className=\"text-white\" href=\"#\">\r\n                  Privacy Policy\r\n                </Card.Link>\r\n              </p>\r\n              <div>\r\n                <FontAwesomeIcon icon={faTwitter} /> &nbsp;\r\n                <FontAwesomeIcon icon={faFacebook} /> &nbsp;\r\n                <FontAwesomeIcon icon={faInstagram} /> &nbsp;\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <hr className=\"bg-gray my-5\" />\r\n          <Row>\r\n            <Col className=\"mb-md-2\">\r\n              <Card.Link\r\n                href=\"\"\r\n                target=\"_blank\"\r\n                className=\"d-flex justify-content-center\"\r\n              >\r\n                <Image\r\n                  src={ReactHero}\r\n                  height={35}\r\n                  className=\"d-block mx-auto mb-3\"\r\n                  alt=\"\"\r\n                />\r\n              </Card.Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.user,\r\n});\r\nexport default connect(mapStateToProps, { logout })(Presentation);\r\n","\r\nimport React from \"react\";\r\nimport Chartist from \"react-chartist\";\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\r\n\r\nexport const SalesValueChart = () => {\r\n  const data = {\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    series: [[1, 2, 2, 3, 3, 4, 3]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: true,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\r\n  );\r\n};\r\n\r\nexport const SalesValueChartphone = () => {\r\n  const data = {\r\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n    series: [[1, 2, 2, 3, 3, 4, 3]]\r\n  };\r\n\r\n  const options = {\r\n    low: 0,\r\n    showArea: true,\r\n    fullWidth: false,\r\n    axisX: {\r\n      position: 'end',\r\n      showGrid: true\r\n    },\r\n    axisY: {\r\n      // On the y-axis start means left and end means right\r\n      showGrid: false,\r\n      showLabel: false,\r\n      labelInterpolationFnc: value => `$${value / 1}k`\r\n    }\r\n  };\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\r\n  );\r\n};\r\n\r\nexport const CircleChart = (props) => {\r\n  const { series = [], donutWidth = 20 } = props;\r\n  const sum = (a, b) => a + b;\r\n\r\n  const options = {\r\n    low: 0,\r\n    high: 8,\r\n    donutWidth,\r\n    donut: true,\r\n    donutSolid: true,\r\n    fullWidth: false,\r\n    showLabel: false,\r\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\r\n  }\r\n\r\n  const plugins = [\r\n    ChartistTooltip()\r\n  ]\r\n\r\n  return (\r\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\r\n  );\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport GaugeChart from \"react-gauge-chart\";\r\n\r\nimport { faAngleDown, faAngleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Col, Row, Card, Button } from \"react-bootstrap\";\r\nimport { SalesValueChart } from \"./Charts\";\r\n\r\nimport ProfileCover from \"../assets/img/profile-cover.jpg\";\r\n\r\nexport const ProfileCardWidget = ({ name, photo }) => {\r\n  return (\r\n    <Card border=\"light\" className=\"text-center p-0 mb-4\">\r\n      <div\r\n        style={{ backgroundImage: `url(${ProfileCover})` }}\r\n        className=\"profile-cover rounded-top\"\r\n      />\r\n      <Card.Body className=\"pb-5\">\r\n        <Card.Img\r\n          src={photo}\r\n          alt=\"profile Image\"\r\n          className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\"\r\n        />\r\n        <Card.Title>{name}</Card.Title>\r\n        <Card.Subtitle className=\"fw-normal\">Software Engineer</Card.Subtitle>\r\n        <Card.Text className=\"text-gray mb-4\">Wah Cantt, Pakistan</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const SalesValueWidget = (props) => {\r\n  const { title, value, percentage } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card className=\"bg-white shadow-sm\">\r\n      <Card.Header className=\"d-flex flex-row align-items-center flex-0\">\r\n        <div className=\"d-block\">\r\n          <h5 className=\"fw-normal mb-2\">{title}</h5>\r\n          <h3>{value}</h3>\r\n          <small className=\"fw-bold mt-2\">\r\n            <span className=\"me-2\">Yesterday</span>\r\n            <FontAwesomeIcon\r\n              icon={percentageIcon}\r\n              className={`${percentageColor} me-1`}\r\n            />\r\n            <span className={percentageColor}>{percentage}%</span>\r\n          </small>\r\n        </div>\r\n        <div className=\"d-flex ms-auto\">\r\n          <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">\r\n            Month\r\n          </Button>\r\n          <Button variant=\"primary\" size=\"sm\" className=\"me-3\">\r\n            Week\r\n          </Button>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body className=\"p-2\">\r\n        <SalesValueChart />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const SalesValueWidgetPhone = (props) => {\r\n  const { title, value, percentage } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card className=\"bg-secondary-alt shadow-sm\">\r\n      <Card.Header className=\"d-md-flex flex-row align-items-center flex-0\">\r\n        <div className=\"d-block mb-3 mb-md-0\">\r\n          <h5 className=\"fw-normal mb-2\">{title}</h5>\r\n          <h3>{value}</h3>\r\n          <small className=\"fw-bold mt-2\">\r\n            <span className=\"me-2\">Yesterday</span>\r\n            <FontAwesomeIcon\r\n              icon={percentageIcon}\r\n              className={`${percentageColor} me-1`}\r\n            />\r\n            <span className={percentageColor}>{percentage}%</span>\r\n          </small>\r\n        </div>\r\n        <div className=\"d-flex ms-auto\">\r\n          <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">\r\n            Month\r\n          </Button>\r\n          <Button variant=\"primary\" size=\"sm\" className=\"me-3\">\r\n            Week\r\n          </Button>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body className=\"p-2\"></Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const DetectionWidget = (props) => {\r\n  const { icon, iconColor, category, title, value, period, percentage } = props;\r\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\r\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\r\n\r\n  return (\r\n    <Card\r\n      border=\"light\"\r\n      className=\"shadow-sm\"\r\n      style={{ backgroundColor: \"#c3dbeb\" }}\r\n    >\r\n      <Card.Body>\r\n        <Row className=\"d-block d-xl-flex align-items-center\">\r\n          <Col>\r\n            {/* .................... */}\r\n\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm\">\r\n                  {\" \"}\r\n                  <GaugeChart\r\n                    id=\"gauge-chart5\"\r\n                    nrOfLevels={420}\r\n                    arcsLength={[0.2, 0.2, 0.2, 0.2, 0.2]}\r\n                    colors={[\r\n                      \"#870000\",\r\n                      \"#f28963\",\r\n                      \"#FFAC40\",\r\n                      \"#117dbf\",\r\n                      \"#026038\",\r\n                    ]}\r\n                    percent={percentage}\r\n                  />\r\n                </div>\r\n                <div class=\"col-sm\">\r\n                  {\" \"}\r\n                  <h5>{category}</h5>\r\n                  <h3 className=\"mb-2\" style={{ color: \"#f28963\" }}>\r\n                    <i>{title}</i>\r\n                  </h3>\r\n                  <h4>\r\n                    <small>\r\n                      {period}Account Status: <i>{value}</i>\r\n                    </small>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* .................... */}\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const Loader = (props) => {\r\n  const { item } = props;\r\n\r\n  return <div></div>;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from \"../../routes\";\r\nimport { Redirect } from \"react-router\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nimport {\r\n  faCashRegister,\r\n  faChartLine,\r\n  faCloudUploadAlt,\r\n  faPlus,\r\n  faRocket,\r\n  faTasks,\r\n  faUserShield,\r\n  faCaretDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Button, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  DetectionWidget,\r\n  SalesValueWidget,\r\n  SalesValueWidgetPhone,\r\n} from \"../../components/Widgets\";\r\nimport { Dashboard } from \"@material-ui/icons\";\r\n\r\nimport {\r\n  checkAuthenticated,\r\n  load_user,\r\n  get_trends,\r\n  get_post,\r\n} from \"../../actions/auth\";\r\n\r\nconst DashboardOverview = ({ data, isAuthenticated, get_post }) => {\r\n  useEffect(() => {\r\n    get_post();\r\n  }, []);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (data.length == 0) {\r\n    return <Redirect to=\"/page\" />;\r\n  }\r\n  const latest = data.length;\r\n  console.log(data);\r\n  var per = data[0].text_result;\r\n  const bot = data[0].name_result;\r\n  const outcome = parseFloat(per).toFixed(2) * 100;\r\n  var categoryFake = \"\";\r\n  if (outcome <= 20) {\r\n    categoryFake = \"Pants-fire\";\r\n  } else if (outcome <= 40) {\r\n    categoryFake = \"False\";\r\n  } else if (outcome <= 60) {\r\n    categoryFake = \"Barely-True\";\r\n  } else if (outcome <= 80) {\r\n    categoryFake = \"Mostly-True\";\r\n  } else if (outcome <= 100) {\r\n    categoryFake = \"True\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {console.log(latest)}\r\n      {console.log(data[latest - 1])}\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <Button\r\n          className=\"fw-bold primary\"\r\n          as={Link}\r\n          to={Routes.Detection.path}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} className=\"me-2\" /> Detect New\r\n        </Button>\r\n\r\n        <ButtonGroup>\r\n          <Button variant=\"outline-tertiary\" size=\"sm\">\r\n            Share Results\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} sm={12} xl={12} className=\"mb-4\">\r\n          <DetectionWidget\r\n            title={categoryFake}\r\n            value={bot === true ? \" Not Bot\" : \"Bot\"}\r\n            percentage={per}\r\n          />\r\n        </Col>\r\n        <Col xs={12} className=\"mb-4 d-none d-sm-block\">\r\n          <SalesValueWidget\r\n            title=\"Hashtag Trends\"\r\n            value=\"10,567 Mentions\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n        <Col xs={12} className=\"mb-4 d-sm-none\">\r\n          <SalesValueWidgetPhone\r\n            title=\"Hashtag Trends\"\r\n            value=\"10,567 Mentions\"\r\n            percentage={10.57}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  get_post,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { get_post })(DashboardOverview);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faFont, faPaste } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Form, Button, InputGroup, Row, Image, Col } from \"react-bootstrap\";\r\nimport DetectBG1 from \"../../assets/img/illustrations/upper.png\";\r\nimport DetectBG2 from \"../../assets/img/illustrations/lower.png\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { detection, get_post } from \"../../actions/auth\";\r\nimport { Loader } from \"../../components/Widgets\";\r\nimport spinner from \"../../assets/img/technologies/spinner.gif\";\r\n\r\nfunction Detection({ user, detection, get_post, isAuthenticated }) {\r\n  const [requestSent, setrequestSent] = useState(false);\r\n\r\n  const [state, setState] = useState(false);\r\n\r\n  const [data, setdata] = useState({\r\n    name: \"\",\r\n    text: \"\",\r\n  });\r\n  if (!isAuthenticated) {\r\n    return <Redirect to=\"\" />;\r\n  }\r\n  const onchangeEvent = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    setdata((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const { text, name } = data;\r\n\r\n  const id = user.id;\r\n  const onsubmit = async (event) => {\r\n    setState(true);\r\n    event.preventDefault();\r\n    await detection(text, name, id);\r\n    get_post();\r\n    setrequestSent(true);\r\n  };\r\n\r\n  if (requestSent) {\r\n    get_post();\r\n    return <Redirect to=\"/dashboard/overview\" />;\r\n  }\r\n  return (\r\n    <body class=\"new-header\">\r\n      <div class=\"text-style-det d-none d-xl-block\">\r\n        <h1>One-Click Detection </h1>\r\n      </div>\r\n      <div class=\" d-xl-none\">\r\n        <center>\r\n          <h1>One-Click Detection</h1>\r\n        </center>\r\n      </div>\r\n      <div class=\"d-none d-xl-block image-style1 \">\r\n        <img src={DetectBG1} alt=\"upper-graphic\" />\r\n      </div>\r\n      <div class=\"d-none d-xl-block image-style2\">\r\n        <img src={DetectBG2} alt=\"Lower-graphic\" />\r\n      </div>\r\n      <main>\r\n        <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n          <div class=\"container\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm\">\r\n                    <Form className=\"mt-2\" onSubmit={onsubmit}>\r\n                      <Form.Group id=\"username\" className=\"mb-4 mt-1\">\r\n                        <Form.Label>Enter Tweet/Text</Form.Label>\r\n                        <InputGroup>\r\n                          <InputGroup.Text>\r\n                            <FontAwesomeIcon icon={faFont} />\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            placeholder=\"Text\"\r\n                            name=\"text\"\r\n                            onChange={onchangeEvent}\r\n                          />\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                      <Form.Group id=\"handle\" className=\"mb-4\">\r\n                        <Form.Label>Enter Twitter Handle</Form.Label>\r\n                        <InputGroup>\r\n                          <InputGroup.Text>\r\n                            <FontAwesomeIcon icon={faUser} />\r\n                          </InputGroup.Text>\r\n                          <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"@twitterhandle\"\r\n                            onChange={onchangeEvent}\r\n                          />\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                      <Row>\r\n                        <Col>\r\n                          <Button\r\n                            variant=\"primary\"\r\n                            type=\"submit\"\r\n                            className=\"w-100\"\r\n                            disabled={state}\r\n                          >\r\n                            Detect{\" \"}\r\n                          </Button>\r\n                        </Col>\r\n                        <Col>\r\n                          {state && (\r\n                            <i>\r\n                              <Image\r\n                                className=\"loader-element animate__animated animate__jackInTheBox\"\r\n                                src={spinner}\r\n                                height={40}\r\n                              />\r\n                            </i>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </div>\r\n\r\n                  <div class=\"col d-none d-xl-block\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </body>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  pagestate: state.auth.pagestate,\r\n  user: state.auth.user,\r\n});\r\nexport default connect(mapStateToProps, { detection, get_post })(Detection);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst PageVisitsTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nexport default PageVisitsTable;","import React, { useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst TableFooter = ({ range, setPage, page, slice }) => {\r\n  useEffect(() => {\r\n    if (slice.length < 1 && page !== 1) {\r\n      setPage(page - 1);\r\n    }\r\n  }, [slice, page, setPage]);\r\n  return (\r\n    <div>\r\n      {range.map((el, index) => (\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          size=\"small\"\r\n          key={index}\r\n          onClick={() => setPage(el)}\r\n        >\r\n          {el}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableFooter;\r\n","import React, { useState } from \"react\";\r\nimport PageVisitsTable from \"./PaginationTable\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEllipsisH, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Nav,\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Dropdown,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport TableFooter from \"./TableFooter\";\r\nimport { get_post, destroy } from \"../actions/auth\";\r\n\r\nconst HistoryTable = ({ data, destroy, isAuthenticated }) => {\r\n  const [page, setPage] = useState(1);\r\n  \r\n  if(!isAuthenticated){\r\n    return <Redirect to='/'/>\r\n   }\r\n  let count= 1+(page-1)*7\r\n  const rowsPerPage=7;\r\n  const total=data.length \r\n  const { slice, range } = PageVisitsTable(data, page, rowsPerPage);\r\n\r\n  const mystyle = {\r\n    textOverflow: \"ellipsis\",\r\n    width: \"270px\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n  };\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"table-wrapper table-responsive shadow-sm\">\r\n      <Card.Body className=\"pt-0\">\r\n        <Table hover className=\"user-table align-items-center\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border-bottom\">#</th>\r\n              <th className=\"border-bottom\">Name</th>\r\n              <th className=\"border-bottom\">Account Status</th>\r\n              <th className=\"border-bottom\">text</th>\r\n              <th className=\"border-bottom\">text Tesult</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {slice.map(({ id, name, text, text_result, name_result }) => (\r\n              <tr>\r\n                <td>\r\n                  <Card.Link as={Link} className=\"fw-normal\">\r\n                    {count++}\r\n                  </Card.Link>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fw-normal\">{name}</span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"fw-normal\">\r\n                    {name_result === true ? \" Not Bot\" : \"Bot\"}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <p className=\"fw-normal\" style={mystyle}>\r\n                    {text}\r\n                  </p>\r\n                </td>\r\n\r\n                <td>\r\n                  <span className=\"fw-normal\">\r\n                    {parseFloat(text_result).toFixed(2) * 100}%\r\n                  </span>\r\n                </td>\r\n\r\n                <td>\r\n                  <Dropdown as={ButtonGroup}>\r\n                    <Dropdown.Toggle\r\n                      as={Button}\r\n                      split\r\n                      variant=\"link\"\r\n                      className=\"text-dark m-0 p-0\"\r\n                    >\r\n                      <span className=\"icon icon-sm\">\r\n                        <FontAwesomeIcon\r\n                          icon={faEllipsisH}\r\n                          className=\"icon-dark\"\r\n                        />\r\n                      </span>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item\r\n                        className=\"text-danger\"\r\n                        onClick={() => {\r\n                          destroy(id);\r\n                        }}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTrashAlt} className=\"me-2\" />{\" \"}\r\n                        Remove\r\n                      </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Card.Footer className=\"px-3 border-0 d-lg-flex align-items-center justify-content-between\">\r\n          <Nav>\r\n            <TableFooter\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              range={range}\r\n              slice={slice}\r\n              setPage={setPage}\r\n              page={page}\r\n            />\r\n          </Nav>\r\n          <small className=\"fw-bold\">\r\n            Total <b> entries: {total}</b>\r\n          </small>\r\n        </Card.Footer>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.post,\r\n});\r\nexport default connect(mapStateToProps, { get_post, destroy })(HistoryTable);\r\n","import React from \"react\";\r\nimport { Button, ButtonGroup } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryTable from \"../components/HistoryTable\";\r\n\r\nconst History = () => {\r\n  return (\r\n    <>\r\n      <div className=\"align-items-left py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>History</h4>\r\n          <p className=\"mb-0\">Usage History.</p>\r\n        </div>\r\n        <div className=\"mb-2 mb-md-0\">\r\n          <ButtonGroup>\r\n            <Button variant=\"outline-tertiary\" size=\"sm\">\r\n              Share\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n      <HistoryTable />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps)(History);\r\n","import React, { useState } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport Datetime from \"react-datetime\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Col, Row, Card, Form, Button, InputGroup, NavItem, Image } from 'react-bootstrap';\r\nimport {load_user,update,passwordChange, distroy } from '../actions/auth'\r\nimport { connect,useSelector, useDispatch } from 'react-redux'\r\nimport {    Redirect, useHistory } from 'react-router-dom'\r\nimport { Block } from \"@material-ui/icons\";\r\nimport spinner from \"../assets/img/technologies/spinner.gif\";\r\n\r\n\r\n const Forms = ({isAuthenticated,data,passwordChange,password}) => {\r\n   const [cpassword, setcpassword] = useState(false)\r\n   const [state, setState] = useState(false);\r\n  const [fdata, setfdata] = useState({\r\n\r\n    first_name:data.first_name,\r\n    last_name:data.last_name,\r\n    uname:data.username,\r\n    password:'',\r\n    cpassword:''\r\n});\r\n\r\n\r\n  const [cdata, setcdata] = useState({\r\n    current_password:'',\r\n    new_password:'',\r\n    re_new_password:''\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const onSubmit= async(event)=> {\r\n \r\n    event.preventDefault()\r\n    let  username= fdata.uname\r\n    let first_name=fdata.first_name\r\n    let last_name=fdata.last_name\r\n    let id=data.id\r\n    update(id,username, first_name,last_name)\r\n    }\r\n\r\n  const changePassword=async(event)=>{\r\n    setState(true)\r\n    event.preventDefault()\r\n    let  current_password= cdata.current_password\r\n    let new_password=cdata.new_password\r\n    let re_new_password=cdata.re_new_password\r\n    await passwordChange(current_password,new_password,re_new_password)\r\n    setcpassword(true)\r\n    setState(false)\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n  const cinputEvent=(event)=>{\r\n    const value= event.target.value;\r\n    const name= event.target.name;\r\n\r\n    setcdata((preValue)=>{\r\n      setcpassword(false)\r\n        return{\r\n            ...preValue,\r\n            [name]:value,\r\n        \r\n    }\r\n    })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nconst inputEvent=(event)=>{\r\n  const value= event.target.value;\r\n  const name= event.target.name;\r\n \r\n\r\n  setfdata((preValue)=>{\r\n      return{\r\n          ...preValue,\r\n          [name]:value,\r\n      \r\n  }\r\n  })\r\n  }\r\n\r\n  return (\r\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n      <Card.Body>\r\n        <h5 className=\"mb-4\">General information</h5>\r\n        <Form>\r\n          <Row className=\"align-items-center\">\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"uname\"\r\n                  onChange={inputEvent}\r\n                  value={fdata.uname}\r\n                  placeholder=\"Enter your username\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"emal\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"email\"\r\n                  disabled\r\n                  value={data.email}\r\n                  placeholder=\"name@company.com\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"firstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  value={fdata.first_name}\r\n                  onChange={inputEvent}\r\n                  placeholder=\"Enter your first name\"\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"lastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  value={fdata.last_name}\r\n                  onChange={inputEvent}\r\n                  placeholder=\"Also your last name\"\r\n                  va\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"mt-3 mb-4\" >\r\n            <Button variant=\"primary\" type=\"submit\">Save All</Button>\r\n          </div>\r\n          </Form>\r\n          <Form onSubmit={changePassword}>\r\n          <h5 className=\"mb-3\">Change Password</h5>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"CurrentPassword\">\r\n                <Form.Label>Current Password</Form.Label>\r\n                <Form.Control required type=\"password\" name=\"current_password\"  onChange={cinputEvent} placeholder=\"Enter your current password\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"NewPassword\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control required type=\"password\" name=\"new_password\"  onChange={cinputEvent} placeholder=\"Enter new password\" />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6} className=\"mb-3\">\r\n              <Form.Group id=\"RetypePassword\">\r\n                <Form.Label>Retype Password</Form.Label>\r\n                <Form.Control required type=\"password\" name=\"re_new_password\"  onChange={cinputEvent} placeholder=\"Retype new password\" />\r\n              </Form.Group>\r\n            </Col>\r\n\r\n            </Row>\r\n            {cpassword ? password ?  <p style={{ color:'green' }}  >Password Change Successfully</p>: <p style={{color:'red'}}  >Invalind Current Password</p> : '' }\r\n           \r\n\r\n          <div className=\"mt-3\">\r\n            <Button variant=\"primary\" type=\"submit\">Change Password</Button>\r\n            {state && (\r\n                            <i>\r\n                              <Image\r\n                                className=\"loader-element animate__animated animate__jackInTheBox\"\r\n                                src={spinner}\r\n                                height={40}\r\n                              />\r\n                            </i>\r\n                          )}\r\n          </div>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated:state.auth.isAuthenticated,\r\n  data:state.auth.user,\r\n  password:state.auth.password\r\n})\r\nexport default connect(mapStateToProps,{load_user,update,passwordChange})(Forms)\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { Col, Row, Card, Image, Button, Form } from \"react-bootstrap\";\r\n\r\nimport { get_profile, load_user, Upload_profile } from \"../actions/auth\";\r\n\r\n\r\nconst ChoosePhotoWidget = ({ title, photo, user, Upload_profile,get_profile,imageName }) => {\r\n  \r\n  const [data, setdata] = useState({\r\n    profile_image: \"\",\r\n    user_id: 0,\r\n  });\r\n\r\n  const imageChange = (event) => {\r\n    const value = event.target.files[0];\r\n\r\n    const name = event.target.name;\r\n    setdata((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const { profile_image } = data;\r\n  if (profile_image.name != null) {\r\n    imageName = profile_image.name;\r\n  } else {\r\n    imageName = \"No image selected\";\r\n  }\r\n  const id = user.id;\r\n  const imageSubmit = async (event) => {\r\n    event.preventDefault();\r\n    Upload_profile(data, id);\r\n    get_profile();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={imageSubmit}>\r\n      <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\r\n        <Card.Body>\r\n          <h5 className=\"mb-4\">{title}</h5>\r\n          <div className=\"d-xl-flex align-items-center\">\r\n            <div className=\"user-avatar xl-avatar\">\r\n              <Image fluid rounded src={photo} />\r\n            </div>\r\n            <div className=\"file-field\">\r\n              <div className=\"d-flex justify-content-xl-center ms-xl-3\">\r\n                <div className=\"d-flex\">\r\n                  <span className=\"icon icon-md\">\r\n                    <FontAwesomeIcon icon={faPaperclip} className=\"me-3\" />\r\n                  </span>\r\n\r\n                  {/* profile image */}\r\n                  <div>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={imageChange}\r\n                      name=\"profile_image\"\r\n                    />\r\n\r\n                    <div className=\"d-md-block text-start\">\r\n                      <div className=\"fw-normal text-dark mb-1\">\r\n                        Choose Image\r\n                      </div>\r\n                      <div className=\"text-gray small\">{imageName}</div>\r\n                      <div>\r\n                        <p></p>\r\n                        <Button variant=\"tertiary text-white\" type=\"submit\">\r\n                          Change\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  pagestate: state.auth.pagestate,\r\n  user: state.auth.user,\r\n});\r\nexport default connect(mapStateToProps, { Upload_profile, get_profile })(\r\n  ChoosePhotoWidget\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Col, Row, Button, Dropdown } from \"react-bootstrap\";\r\nimport { ProfileCardWidget } from \"../components/Widgets\";\r\nimport Forms from \"../components/Forms\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router\";\r\nimport { get_profile } from \"../actions/auth\";\r\nimport ChoosePhotoWidget from \"../components/ChoosePhotoWidget\";\r\n\r\n\r\nconst Setting = ({ data, isAuthenticated, profile, get_profile }) => {\r\n  const [photo1, setphoto1] = useState(\"\");\r\n  console.log(profile)\r\n  useEffect(() => {\r\n    if (profile.length != 0) {\r\n      const length = profile.length;\r\n\r\n      console.log(profile[length - 1].image);\r\n      setphoto1(\"https://irtaza780.pythonanywhere.com\" + profile[length - 1].image);\r\n    } else {\r\n      setphoto1(\r\n        \"https://gravatar.com/avatar/ebd9bee59cb2e199586042ca9527a31c?s=400&d=mp&r=x\"\r\n      );\r\n    }\r\n  }, [profile]);\r\n\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-flex\"></div>\r\n      </div>\r\n\r\n      <Row className=\"settingsContainer\">\r\n        <Col xs={12} xl={8}>\r\n          <Forms />\r\n        </Col>\r\n\r\n        <Col xs={12} xl={4}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <ProfileCardWidget photo={photo1} name={data.username} />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <ChoosePhotoWidget title=\"Select profile photo\" photo={photo1} />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.user,\r\n  profile: state.auth.profile,\r\n});\r\nexport default connect(mapStateToProps)(Setting);\r\n","import React from \"react\";\r\n\r\nimport { get_trends } from \"../../actions/auth\";\r\nimport { connect} from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  Table,\r\n} from \"react-bootstrap\";\r\n\r\n\r\nfunction Trends({ isAuthenticated, data }) {\r\n \r\n  \r\n  const TableRow = (props) => {\r\n    const { name, tweet_volume } = props;\r\n  \r\n\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\">{name}</th>\r\n        <td>{tweet_volume}</td>\r\n        {/* <td>${returnValue}</td> */}\r\n        <td>{/* {Math.abs(bounceRate)}% */}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  \r\n \r\n \r\n \r\n  return (\r\n    <div>\r\n      <Card border=\"light\" className=\"shadow-sm mb-4\">\r\n        <Card.Body className=\"pb-0\">\r\n          <Table\r\n            responsive\r\n            className=\"table-centered table-nowrap rounded mb-0\"\r\n          >\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th className=\"border-0\">#Name</th>\r\n                <th className=\"border-0\">tweet volume</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data ? data.map((pt) => (\r\n                <TableRow key={`page-traffic-${pt.id}`} {...pt} />\r\n              )) : \"not found \"\r\n            }\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.trends,\r\n});\r\n\r\nexport default connect(mapStateToProps, { get_trends })(Trends);\r\n","import React from \"react\";\r\nimport Trends from \"./Trends\";\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <div className=\"d-xl-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-xl-0\">\r\n          <h4>Trends Tables</h4>\r\n        </div>\r\n      </div>\r\n      <Trends />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebook,\r\n  faGithub,\r\n  faTwitter,\r\n  faGoogle,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  FormCheck,\r\n  Container,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\nimport { add } from \"../../actions/auth\";\r\n\r\nconst Signin = ({ add, isAuthenticated, pagestate }) => {\r\n  const [eCheck, seteCheck] = useState(\"none\");\r\n\r\n  const history = useHistory();\r\n  const [modal, setmodal] = useState(true);\r\n\r\n  const [data, setdata] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setmodal(pagestate);\r\n  });\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  const onchangeEvent = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    setdata((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const { email, password } = data;\r\n  const onsubmit = async (event) => {\r\n    event.preventDefault();\r\n    await add(email, password);\r\n    if (isAuthenticated) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      seteCheck(\"block\");\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link\r\n              as={Link}\r\n              to={Routes.Presentation.path}\r\n              className=\"text-gray-700\"\r\n            >\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\r\n              homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row\r\n            className=\"justify-content-center form-bg-image\"\r\n            style={{ backgroundImage: `url(${BgImage})` }}\r\n          >\r\n            <Col\r\n              xs={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\r\n                </div>\r\n                <Form className=\"mt-4\" onSubmit={onsubmit}>\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        onChange={onchangeEvent}\r\n                        autoFocus\r\n                        required\r\n                        type=\"email\"\r\n                        placeholder=\"example@company.com\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Group id=\"password\" className=\"mb-4\">\r\n                      <Form.Label>Your Password</Form.Label>\r\n                      <InputGroup>\r\n                        <InputGroup.Text>\r\n                          <FontAwesomeIcon icon={faUnlockAlt} />\r\n                        </InputGroup.Text>\r\n                        <Form.Control\r\n                          name=\"password\"\r\n                          onChange={onchangeEvent}\r\n                          required\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                        />\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                      <Form.Check type=\"checkbox\">\r\n                        <Form.Label\r\n                          className=\"mb-0 text-danger\"\r\n                          style={{ display: eCheck }}\r\n                        >\r\n                          Invalid Email or Password\r\n                        </Form.Label>\r\n                      </Form.Check>\r\n                      <Card.Link\r\n                        className=\"small text-end\"\r\n                        as={Link}\r\n                        to={Routes.ForgotPassword.path}\r\n                      >\r\n                        Lost password?\r\n                      </Card.Link>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Sign in\r\n                  </Button>\r\n                </Form>\r\n\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Not registered?\r\n                    <Card.Link\r\n                      as={Link}\r\n                      to={Routes.Signup.path}\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {` Create account `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  pagestate: state.auth.pagestate,\r\n});\r\nexport default connect(mapStateToProps, { add })(Signin);\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebookF,\r\n  faGithub,\r\n  faTwitter,\r\n  faGoogle,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  FormCheck,\r\n  Container,\r\n  InputGroup,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { signup } from \"../../actions/auth\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\nimport { Alert } from \"bootstrap\";\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n  const [data, setdata] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    uname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    cpassword: \"\",\r\n  });\r\n  const [accountCreated, setaccountCreated] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let email = data.email;\r\n    let username = data.uname;\r\n    let password = data.password;\r\n    let fpassword = data.password;\r\n\r\n    let re_password = data.cpassword;\r\n    let first_name = data.first_name;\r\n    let last_name = data.last_name;\r\n    if (password === re_password) {\r\n      signup(\r\n        username,\r\n        first_name,\r\n        last_name,\r\n        email,\r\n        password,\r\n        re_password,\r\n        fpassword\r\n      );\r\n      setaccountCreated(true);\r\n    } else {\r\n      alert(\"Password Not Match\");\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/index\" />;\r\n  }\r\n  if (accountCreated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  const inputEvent = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    setdata((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <p className=\"text-center\">\r\n            <Card.Link\r\n              as={Link}\r\n              to={Routes.Presentation.path}\r\n              className=\"text-gray-700\"\r\n            >\r\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\r\n              homepage\r\n            </Card.Link>\r\n          </p>\r\n          <Row\r\n            className=\"justify-content-center form-bg-image\"\r\n            style={{ backgroundImage: `url(${BgImage})` }}\r\n          >\r\n            <Col\r\n              xs={12}\r\n              className=\"d-flex align-items-center justify-content-center\"\r\n            >\r\n              <div className=\"mb-4 mb-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">Create an account</h3>\r\n                </div>\r\n                <Form className=\"mt-4\" onSubmit={onSubmit}>\r\n                  <Form.Group id=\"username\" className=\"mb-4\">\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        autoFocus\r\n                        name=\"first_name\"\r\n                        onChange={inputEvent}\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"username\" className=\"mb-4\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        autoFocus\r\n                        name=\"last_name\"\r\n                        onChange={inputEvent}\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>Your Email</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        autoFocus\r\n                        required\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        onChange={inputEvent}\r\n                        placeholder=\"example@company.com\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"username\" className=\"mb-4\">\r\n                    <Form.Label>Your username</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        autoFocus\r\n                        name=\"uname\"\r\n                        onChange={inputEvent}\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"IUsername\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Your Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        required\r\n                        onChange={inputEvent}\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    id=\"confirmPassword\"\r\n                    name=\"cpassword\"\r\n                    className=\"mb-4\"\r\n                  >\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control\r\n                        onChange={inputEvent}\r\n                        name=\"cpassword\"\r\n                        required\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <FormCheck type=\"checkbox\" className=\"d-flex mb-4\">\r\n                    <FormCheck.Input required id=\"terms\" className=\"me-2\" />\r\n                    <FormCheck.Label htmlFor=\"terms\">\r\n                      I agree to the <Card.Link>terms and conditions</Card.Link>\r\n                    </FormCheck.Label>\r\n                  </FormCheck>\r\n\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Sign up\r\n                  </Button>\r\n                </Form>\r\n\r\n                {/* <div className=\"mt-3 mb-4 text-center\">\r\n                  <span className=\"fw-normal\">or</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-facebook me-2\">\r\n                    <FontAwesomeIcon icon={faFacebookF} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pill text-twitter me-2\">\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                  </Button>\r\n                  <Button variant=\"outline-light\" className=\"btn-icon-only btn-pil text-dark\">\r\n                    <FontAwesomeIcon icon={faGoogle} />\r\n                  </Button>\r\n                </div> */}\r\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\r\n                  <span className=\"fw-normal\">\r\n                    Already have an account?\r\n                    <Card.Link\r\n                      as={Link}\r\n                      to={Routes.Signin.path}\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {` Login here `}\r\n                    </Card.Link>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);\r\n","\r\nimport React,{useState,useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\r\nimport { Link,Redirect,useHistory } from 'react-router-dom';\r\nimport {reset_password} from '../../actions/auth'\r\nimport { Routes } from \"../../routes\";\r\nimport {connect} from 'react-redux'\r\n\r\nimport BgImage from \"../graphics/password.svg\";\r\n\r\nconst ForgotPassword= ({reset_password,isAuthenticated}) => {\r\n  const [validation, setvalidation] = useState('none')\r\n  const [Success, setSuccess] = useState('none')\r\nconst [action, setaction] = useState(false)\r\n  const history=useHistory();\r\n  const [modal, setmodal] = useState(true)\r\n \r\n   const [data, setdata] = useState({\r\n       email:'',\r\n\r\n   })\r\n\r\n\r\n   const onchangeEvent=(event)=>{\r\n    const value= event.target.value;\r\n    const name= event.target.name;\r\n  \r\n    setdata((preValue)=>{\r\n        return{\r\n            ...preValue,\r\n            [name]:value,\r\n        \r\n    }\r\n  })    \r\n  }\r\n\r\n\r\n\r\n  const {email}=data\r\nconst onsubmit= async(event)=> {\r\nevent.preventDefault()\r\nconsole.log(reset_password(email))\r\nif(reset_password(email)){\r\n  setaction(true) \r\n}\r\nif(action){\r\n  setvalidation('none')\r\n  setSuccess('block')\r\n}else{\r\n  setSuccess('none')\r\n  setvalidation('block')\r\n}\r\n}   \r\n\r\n\r\n\r\n\r\n\r\n  if(isAuthenticated){\r\n    return <Redirect to='/'/>\r\n  }\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <main>\r\n      <section className=\"vh-lg-100 mt-4 mt-lg-0 bg-soft d-flex align-items-center\">\r\n        <Container >\r\n          <Row className=\"justify-content-center\" >\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n            </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"signin-inner my-3 my-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3>Forgot your password?</h3>\r\n                <p className=\"mb-4\">Don't fret! Just type in your email and we will send you a code to reset your password!</p>\r\n                <Form onSubmit={onsubmit}>\r\n                  <div className=\"mb-4\">\r\n                    <Form.Label htmlFor=\"email\">Your Email</Form.Label>\r\n                    <InputGroup id=\"email\">\r\n                      <Form.Control required onChange={onchangeEvent} autoFocus type=\"email\" name=\"email\" placeholder=\"john@company.com\" />\r\n                    </InputGroup>\r\n                    <p style={{fontSize:14,display:validation}} className='text-danger' >Invalid Email</p>\r\n                    <p style={{fontSize:14,display:Success}} className='text-success' >Check Your Email</p>\r\n\r\n                  </div>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Recover password\r\n                  </Button>\r\n                </Form>\r\n                <div>\r\n                  <p></p>\r\n                 <center> <img src={BgImage} alt=\"Image\" style={{width:\"300px\"}}></img> </center>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\nexport default connect(mapStateToProps,{reset_password})(ForgotPassword)","import React,{useState,useEffect} from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {    Redirect } from 'react-router-dom'\r\nimport { Routes } from \"../../routes\";\r\nimport {connect} from 'react-redux';\r\nimport {verify} from '../../actions/auth'\r\n\r\n\r\nconst VerifyAccount=({verify ,match}) => {\r\n\r\n  const [verified, setVeried] = useState(false)\r\n  const onsubmit= ()=> {\r\n    const uid=match.params.uid;\r\n    const token=match.params.token\r\n    verify(uid,token)\r\n    setVeried(true)\r\n   \r\n  \r\n   }   \r\n\r\n   if(verified){\r\n    return <Redirect to='/' />\r\n}\r\n   \r\n  return (\r\n    <main>\r\n      <section className=\"vh-lg-100 mt-4 mt-lg-0 bg-soft d-flex align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n            </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"signin-inner my-3 my-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3>Verify Your Account</h3>\r\n                <p className=\"mb-4\">Don't fret! Just type in your email and we will send you a code to reset your password!</p>\r\n                <Form>\r\n                  <div className=\"mb-4\">\r\n                    <Form.Label htmlFor=\"email\">Your Email</Form.Label>\r\n                    {/* <InputGroup id=\"email\">\r\n                      <Form.Control required autoFocus type=\"email\" placeholder=\"john@company.com\" />\r\n                    </InputGroup> */}\r\n                  </div>\r\n                  <Button variant=\"primary\" onClick={onsubmit} type=\"submit\" className=\"w-100\">\r\n                    Confirm \r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default connect(null,{verify})(VerifyAccount)","\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\r\nimport { Link,Redirect,useHistory } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport React,{useState,useEffect} from \"react\";\r\n\r\nimport {reset_password_confirm} from '../../actions/auth'\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../graphics/password.svg\"\r\n\r\n\r\nconst ResetPassword=({match,reset_password_confirm,isAuthenticated}) => {\r\n  const [requestSent, setrequestSent] = useState(false)\r\n\r\n  const history=useHistory();\r\n  const [modal, setmodal] = useState(true)\r\n \r\n   const [data, setdata] = useState({\r\n       cpassword:'',\r\n       password:'',\r\n\r\n   })\r\n\r\n   \r\n\r\n\r\n  const onchangeEvent=(event)=>{\r\n  const value= event.target.value;\r\n  const name= event.target.name;\r\n\r\n  setdata((preValue)=>{\r\n      return{\r\n          ...preValue,\r\n          [name]:value,\r\n      \r\n  }\r\n})    \r\n}\r\nconst {cpassword,password}=data\r\nconst onsubmit= async(event)=> {\r\n  event.preventDefault()\r\n  const uid=match.params.uid;\r\n  const token=match.params.token;\r\n  alert(\"Asad\")\r\n  reset_password_confirm(uid,token,password,cpassword) \r\n  setrequestSent(true)\r\n\r\n}   \r\n\r\nif(requestSent){\r\n  return <Redirect to='/' />\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n              </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3 className=\"mb-4\">Change password</h3>\r\n                <Form onSubmit={onsubmit}>\r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control name=\"password\" required onChange={onchangeEvent} type=\"password\" placeholder=\"Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required name=\"cpassword\" onChange={onchangeEvent} type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    Reset password\r\n                  </Button>\r\n                </Form>\r\n                <div>\r\n                  <p></p>\r\n                 <center> <img src={BgImage} alt=\"Image\" style={{width:\"200px\"}}></img> </center>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  forgot:state.auth.forgot\r\n})\r\nexport default connect(mapStateToProps,{reset_password_confirm})(ResetPassword);","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\n\r\n\r\nconst ChangePassword= () => {\r\n  return (\r\n    <main>\r\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <p className=\"text-center\">\r\n              <Card.Link as={Link} to={Routes.Signin.path} className=\"text-gray-700\">\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to sign in\r\n              </Card.Link>\r\n            </p>\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <h3 className=\"mb-4\">Change password</h3>\r\n                <Form>\r\n           \r\n                <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>Old Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n                    </InputGroup>\r\n\r\n\r\n\r\n\r\n                    \r\n                  </Form.Group>\r\n           \r\n           \r\n                  <Form.Group id=\"password\" className=\"mb-4\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Password\" />\r\n                    </InputGroup>\r\n\r\n\r\n\r\n\r\n\r\n                  </Form.Group>\r\n                  <Form.Group id=\"confirmPassword\" className=\"mb-4\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <InputGroup>\r\n                      <InputGroup.Text>\r\n                        <FontAwesomeIcon icon={faUnlockAlt} />\r\n                      </InputGroup.Text>\r\n                      <Form.Control required type=\"password\" placeholder=\"Confirm Password\" />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                   Change Password\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport default ChangePassword","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Card, Image, Button, Container } from 'react-bootstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport NotFoundImage from \"../../assets/img/illustrations/404.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} className=\"text-center d-flex align-items-center justify-content-center\">\r\n              <div>\r\n                <Card.Link as={Link} to={Routes.DashboardOverview.path}>\r\n                  <Image src={NotFoundImage} className=\"img-fluid w-75\" />\r\n                </Card.Link>\r\n                <h1 className=\"text-primary mt-5\">\r\n                  Page not <span className=\"fw-bolder\">found</span>\r\n                </h1>\r\n                <p className=\"lead my-4\">\r\n                  Oops! Looks like you followed a bad link. If you think this is a\r\n                  problem with us, please tell us.\r\n            </p>\r\n                <Button as={Link} variant=\"primary\" className=\"animate-hover\" to={Routes.DashboardOverview.path}>\r\n                  <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\r\n                  Go back home\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Col, Row, Image, Button, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Routes } from \"../../routes\";\r\nimport ErrorImage from \"../../assets/img/illustrations/500.svg\";\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <main>\r\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\r\n        <Container>\r\n          <Row className=\"align-items-center\">\r\n            <Col xs={12} lg={5} className=\"order-2 order-lg-1 text-center text-lg-left\">\r\n              <h1 className=\"text-primary mt-5\">\r\n                Something has gone <span className=\"fw-bolder\">seriously</span> wrong\r\n          </h1>\r\n              <p className=\"lead my-4\">\r\n                It's always time for a coffee break. We should be back by the time you finish your coffee.\r\n          </p>\r\n              <Button as={Link} variant=\"primary\" className=\"animate-hover\" to={Routes.DashboardOverview.path}>\r\n                <FontAwesomeIcon icon={faChevronLeft} className=\"animate-left-3 me-3 ms-2\" />\r\n                Go back home\r\n              </Button>\r\n            </Col>\r\n            <Col xs={12} lg={7} className=\"order-1 order-lg-2 text-center d-flex align-items-center justify-content-center\">\r\n              <Image src={ErrorImage} className=\"img-fluid w-75\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBook,\r\n  faBoxOpen,\r\n  faChartPie,\r\n  faCog,\r\n  faHome,\r\n  faFileAlt,\r\n  faHistory,\r\n  faSignOutAlt,\r\n  faTable,\r\n  faTimes,\r\n  faCalendarAlt,\r\n  faMapPin,\r\n  faInbox,\r\n  faRocket,\r\n  faEye,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Nav,\r\n  Badge,\r\n  Image,\r\n  Button,\r\n  Dropdown,\r\n  Accordion,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from \"../routes\";\r\nimport ReactHero from \"../assets/img/technologies/react-hero-logo.svg\";\r\nimport ProfilePicture from \"../assets/img/team/profile-picture-3.jpg\";\r\n\r\nexport default (props = {}) => {\r\n  const location = useLocation();\r\n  const { pathname } = location;\r\n  const [show, setShow] = useState(false);\r\n  const showClass = show ? \"show\" : \"\";\r\n\r\n  const onCollapse = () => setShow(!show);\r\n\r\n  const CollapsableNavItem = (props) => {\r\n    const { eventKey, title, icon, children = null } = props;\r\n    const defaultKey = pathname.indexOf(eventKey) !== -1 ? eventKey : \"\";\r\n\r\n    return (\r\n      <Accordion as={Nav.Item} defaultActiveKey={defaultKey}>\r\n        <Accordion.Item eventKey={eventKey}>\r\n          <Accordion.Button\r\n            as={Nav.Link}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            <span>\r\n              <span className=\"sidebar-icon\">\r\n                <FontAwesomeIcon icon={icon} />{\" \"}\r\n              </span>\r\n              <span className=\"sidebar-text\">{title}</span>\r\n            </span>\r\n          </Accordion.Button>\r\n          <Accordion.Body className=\"multi-level\">\r\n            <Nav className=\"flex-column\">{children}</Nav>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    );\r\n  };\r\n\r\n  const NavItem = (props) => {\r\n    const {\r\n      title,\r\n      link,\r\n      external,\r\n      target,\r\n      icon,\r\n      image,\r\n      badgeText,\r\n      badgeBg = \"secondary\",\r\n      badgeColor = \"primary\",\r\n    } = props;\r\n    const classNames = badgeText\r\n      ? \"d-flex justify-content-start align-items-center justify-content-between\"\r\n      : \"\";\r\n    const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = external ? { href: link } : { as: Link, to: link };\r\n\r\n    return (\r\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\r\n        <Nav.Link {...linkProps} target={target} className={classNames}>\r\n          <span>\r\n            {icon ? (\r\n              <span className=\"sidebar-icon\">\r\n                <FontAwesomeIcon icon={icon} />{\" \"}\r\n              </span>\r\n            ) : null}\r\n            {image ? (\r\n              <Image\r\n                src={image}\r\n                width={20}\r\n                height={20}\r\n                className=\"sidebar-icon svg-icon\"\r\n              />\r\n            ) : null}\r\n\r\n            <span className=\"sidebar-text\">{title}</span>\r\n          </span>\r\n          {badgeText ? (\r\n            <Badge\r\n              pill\r\n              bg={badgeBg}\r\n              text={badgeColor}\r\n              className=\"badge-md notification-count ms-2\"\r\n            >\r\n              {badgeText}\r\n            </Badge>\r\n          ) : null}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        expand={false}\r\n        collapseOnSelect\r\n        variant=\"dark\"\r\n        className=\"navbar-theme-primary px-4 d-md-none\"\r\n      >\r\n        <Navbar.Brand\r\n          className=\"me-lg-5\"\r\n          as={Link}\r\n          to={Routes.DashboardOverview.path}\r\n        >\r\n          <Image src={ReactHero} className=\"navbar-brand-light\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle\r\n          as={Button}\r\n          aria-controls=\"main-navbar\"\r\n          onClick={onCollapse}\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Navbar.Toggle>\r\n      </Navbar>\r\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\r\n        <SimpleBar\r\n          className={`collapse ${showClass} sidebar d-md-block bg-primary text-white`}\r\n        >\r\n          <div className=\"sidebar-inner px-4 pt-3\">\r\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <div className=\"user-avatar lg-avatar me-4\">\r\n                  <Image\r\n                    src={ProfilePicture}\r\n                    className=\"card-img-top rounded-circle border-white\"\r\n                  />\r\n                </div>\r\n                <div className=\"d-block\">\r\n                  <h6>Hi, Irtaza</h6>\r\n                  <Button\r\n                    as={Link}\r\n                    variant=\"secondary\"\r\n                    size=\"xs\"\r\n                    to={Routes.Signin.path}\r\n                    className=\"text-dark\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"me-2\" />{\" \"}\r\n                    Sign Out\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Nav.Link\r\n                className=\"collapse-close d-md-none\"\r\n                onClick={onCollapse}\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </Nav.Link>\r\n            </div>\r\n            <Nav className=\"flex-column pt-3 pt-md-0\">\r\n              <NavItem\r\n                title=\"Homepage\"\r\n                link={Routes.Presentation.path}\r\n                icon={faHome}\r\n              />\r\n              <NavItem\r\n                title=\"One-Click Detection\"\r\n                link={Routes.Detection.path}\r\n                icon={faEye}\r\n              />\r\n\r\n              <NavItem\r\n                title=\"Dashboard\"\r\n                link={Routes.DashboardOverview.path}\r\n                icon={faChartPie}\r\n              />\r\n\r\n              <NavItem\r\n                title=\"History\"\r\n                icon={faHistory}\r\n                link={Routes.History.path}\r\n              />\r\n              <NavItem\r\n                title=\"Settings\"\r\n                icon={faCog}\r\n                link={Routes.Settings.path}\r\n              />\r\n\r\n              <NavItem\r\n                title=\"Trends Table\"\r\n                link={Routes.TrendsTables.path}\r\n                icon={faTable}\r\n              />\r\n\r\n              <Dropdown.Divider className=\"my-3 border-white\" />\r\n            </Nav>\r\n          </div>\r\n        </SimpleBar>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBell,\r\n  faCog,\r\n  faEnvelopeOpen,\r\n  faSearch,\r\n  faSignOutAlt,\r\n  faUserShield,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  Form,\r\n  Image,\r\n  Navbar,\r\n  Dropdown,\r\n  Container,\r\n  ListGroup,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/auth\";\r\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Routes } from \"../routes\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nconst Navbarc = ({ logout, isAuthenticated, data,profile }) => {\r\n  const [photo1, setphoto1] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n    if (profile.length != 0) {\r\n      const length = profile.length;\r\n\r\n      setphoto1(\"https://irtaza780.pythonanywhere.com\" + profile[length - 1].image);\r\n    } else {\r\n      setphoto1(\r\n        \"https://gravatar.com/avatar/ebd9bee59cb2e199586042ca9527a31c?s=400&d=mp&r=x\"\r\n      );\r\n    }\r\n  }, [profile]);\r\n  if (!isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Navbar variant=\"dark\" expanded className=\"ps-0 pe-2 pb-0\">\r\n      <Container fluid className=\"px-0\">\r\n        <div className=\"d-flex justify-content-between w-100\">\r\n          <div className=\"d-flex align-items-center\">\r\n         \r\n          </div>\r\n          <Nav className=\"align-items-center\">\r\n            <Dropdown as={Nav.Item}>\r\n              <Dropdown.Toggle as={Nav.Link} className=\"pt-1 px-0\">\r\n                <div className=\"media d-flex align-items-center\">\r\n                  <Image\r\n                    src={photo1}\r\n                    className=\"user-avatar md-avatar rounded-circle\"\r\n                  />\r\n                  <div className=\"media-body ms-2 text-dark align-items-center d-none d-lg-block\">\r\n                    <span className=\"mb-0 font-small fw-bold\">\r\n                      {data.username}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"user-dropdown dropdown-menu-right mt-2\">\r\n                <Dropdown.Item\r\n                  className=\"fw-bold\"\r\n                  as={Link}\r\n                  to={Routes.Settings.path}\r\n                >\r\n                  <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" /> My\r\n                  Profile\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"fw-bold\" as={Link}\r\n                  to={Routes.Settings.path}>\r\n                  <FontAwesomeIcon icon={faCog} className=\"me-2\" /> Settings\r\n                </Dropdown.Item>\r\n           \r\n\r\n                <Dropdown.Divider />\r\n\r\n                <Dropdown.Item className=\"fw-bold\" onClick={() => logout()}>\r\n                  <FontAwesomeIcon\r\n                    icon={faSignOutAlt}\r\n                    className=\"text-danger me-2\"\r\n                  />{\" \"}\r\n                  Logout\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n        </div>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  data: state.auth.user,\r\n  profile: state.auth.profile,\r\n\r\n});\r\nexport default connect(mapStateToProps, { logout })(Navbarc);\r\n","import React from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nimport ReactLogo from \"../assets/img/technologies/disk.svg\";\r\n\r\nexport default (props) => {\r\n  const { show } = props;\r\n\r\n  return (\r\n    <div\r\n      className={`preloader bg-soft flex-column justify-content-center align-items-center ${\r\n        show ? \"\" : \"show\"\r\n      }`}\r\n    >\r\n      <Image\r\n        className=\"loader-element animate__animated animate__jackInTheBox\"\r\n        src={ReactLogo}\r\n        height={40}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React,{useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {get_profile,checkAuthenticated,load_user,get_trends, get_post} from '../actions/auth'\r\nconst Layout=({get_profile,    checkAuthenticated,get_trends, load_user,children,get_post})=> {\r\nuseEffect(()=>{\r\ncheckAuthenticated();\r\nload_user();\r\nget_trends();\r\nget_post();\r\nget_profile()\r\n},)\r\n\r\n    return (\r\n        <div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{get_profile,checkAuthenticated,load_user,get_trends,get_post})(Layout)\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleLeft,\r\n  faEnvelope,\r\n  faUnlockAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faFacebook,\r\n  faGithub,\r\n  faTwitter,\r\n  faGoogle,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Card,\r\n  Button,\r\n  FormCheck,\r\n  Container,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Routes } from \"../../routes\";\r\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\r\nimport { add } from \"../../actions/auth\";\r\nimport Irtaza from \"../../assets/img/aboutUsI.jpg\";\r\nimport Asad from \"../../assets/img/aboutUsA.jpg\";\r\nimport FadeIn from 'react-fade-in';\r\n\r\nconst AboutUs = () => {\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} xl={6} className=\"text-center\">\r\n              <Link to={Routes.Presentation.path}>\r\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" />\r\n                Back to homepage{\" \"}\r\n              </Link>\r\n              <h1\r\n                className=\"brand-text text-quaternary\"\r\n                style={{\r\n                  fontSize: \"4rem\",\r\n                  fontWeight: \"1000\",\r\n                  fontFamily:\r\n                    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                }}\r\n              >\r\n                ABOUT US\r\n              </h1>\r\n              <p>\r\n                An effort to expedite detection of fake news and detecting\r\n                twitter bot users, using Machine Learning techniques. This\r\n                web-application is jointly developed by Asad and Irtaza. We\r\n                started working on this idea earlier 2021. The idea came from a\r\n                deep interest of pattern anaylsis in text data. We appreciate\r\n                your visit to our website. We look forward to your feedback and\r\n                are dedicated to continually improving our project.\r\n              </p>\r\n            </Col>\r\n            <Col>\r\n              <h1\r\n                className=\"brand-text text-quaternary\"\r\n                style={{\r\n                  fontSize: \"4rem\",\r\n                  fontWeight: \"1000\",\r\n                  fontFamily:\r\n                    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n                }}\r\n              ></h1>\r\n                    <FadeIn>\r\n                <div>\r\n                  <img src={Asad} alt=\"about-us-illustration\" />\r\n                </div>\r\n                </FadeIn>\r\n\r\n            </Col>\r\n            <Col>\r\n            <FadeIn>\r\n                <div>\r\n                  <img src={Irtaza} alt=\"about-us-illustration\" />\r\n                </div>\r\n                </FadeIn>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport default AboutUs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Routes } from \"../routes\";\r\n\r\n// pages\r\nimport Presentation from \"./Presentation\";\r\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\r\nimport Detection from \"../pages/components/Detection\";\r\nimport History from \"./History\";\r\nimport Setting from \"./Setting\";\r\nimport TrendsTables from \"./tables/TrendsTables\";\r\nimport Signin from \"./examples/Signin\";\r\nimport Signup from \"./examples/Signup\";\r\nimport ForgotPassword from \"./examples/ForgotPassword\";\r\n\r\nimport VerifyAccount from \"./examples/VerifyAccount\";\r\nimport ResetPassword from \"./examples/ResetPassword\";\r\nimport ChangePassword from \"./examples/ChangePassword\";\r\n\r\nimport NotFoundPage from \"./examples/NotFound\";\r\nimport ServerError from \"./examples/ServerError\";\r\n\r\n// components\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Navbarc from \"../components/Navbarc\";\r\nimport Preloader from \"../components/Preloader\";\r\n\r\nimport Layout from \"../hocs/Layout\";\r\nimport AboutUs from \"./examples/AboutUs\";\r\n\r\nconst RouteWithLoader = ({ component: Component, ...rest }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoaded(true), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <>\r\n          {\" \"}\r\n          <Preloader show={loaded ? false : true} /> <Component {...props} />{\" \"}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst RouteWithSidebar = ({ component: Component, ...rest }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoaded(true), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const localStorageIsSettingsVisible = () => {\r\n    return localStorage.getItem(\"settingsVisible\") === \"false\" ? false : true;\r\n  };\r\n\r\n  const [showSettings, setShowSettings] = useState(\r\n    localStorageIsSettingsVisible\r\n  );\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <>\r\n          <Preloader show={loaded ? false : true} />\r\n          <Sidebar />\r\n\r\n          <main className=\"content\">\r\n            <Navbarc />\r\n            <Component {...props} />\r\n          </main>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <Switch>\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.Presentation.path}\r\n        component={Presentation}\r\n      />\r\n      <RouteWithLoader exact path={Routes.Signin.path} component={Signin} />\r\n      <RouteWithLoader exact path={Routes.Signup.path} component={Signup} />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.ForgotPassword.path}\r\n        component={ForgotPassword}\r\n      />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.VerifyAccount.path}\r\n        component={VerifyAccount}\r\n      />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.ResetPassword.path}\r\n        component={ResetPassword}\r\n      />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.ChangePassword.path}\r\n        component={ChangePassword}\r\n      />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.NotFound.path}\r\n        component={NotFoundPage}\r\n      />\r\n      <RouteWithLoader\r\n        exact\r\n        path={Routes.ServerError.path}\r\n        component={ServerError}\r\n      />\r\n      <RouteWithLoader exact path={Routes.AboutUs.path} component={AboutUs} />\r\n\r\n      {/* pages */}\r\n      <RouteWithSidebar\r\n        exact\r\n        path={Routes.DashboardOverview.path}\r\n        component={DashboardOverview}\r\n      />\r\n      <RouteWithSidebar exact path={Routes.History.path} component={History} />\r\n      <RouteWithSidebar exact path={Routes.Settings.path} component={Setting} />\r\n      <RouteWithSidebar\r\n        exact\r\n        path={Routes.TrendsTables.path}\r\n        component={TrendsTables}\r\n      />\r\n      <RouteWithSidebar\r\n        exact\r\n        path={Routes.Detection.path}\r\n        component={Detection}\r\n      />\r\n\r\n      {/* components */}\r\n\r\n      <Redirect to={Routes.NotFound.path} />\r\n    </Switch>\r\n  </Layout>\r\n);\r\n","// Here are more informations about the scroll restoration of React Router\r\n// https://reactrouter.com/web/guides/scroll-restoration\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n// core styles\r\nimport \"./scss/main.scss\";\r\n\r\n// vendor styles\r\nimport \"@fortawesome/fontawesome-free/css/all.css\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./store\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <ScrollToTop />\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor }>\r\n        <HomePage />\r\n      </PersistGate>\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/react-hero-logo.564ea0e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/signin.1217b8ee.svg\";"],"sourceRoot":""}